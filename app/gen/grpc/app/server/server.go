// Code generated by goa v3.14.0, DO NOT EDIT.
//
// app gRPC server
//
// Command:
// $ goa gen app/design

package server

import (
	app "app/gen/app"
	apppb "app/gen/grpc/app/pb"
	"context"

	goagrpc "goa.design/goa/v3/grpc"
	goa "goa.design/goa/v3/pkg"
)

// Server implements the apppb.AppServer interface.
type Server struct {
	SelectH goagrpc.UnaryHandler
	apppb.UnimplementedAppServer
}

// New instantiates the server struct with the app service endpoints.
func New(e *app.Endpoints, uh goagrpc.UnaryHandler) *Server {
	return &Server{
		SelectH: NewSelectHandler(e.Select, uh),
	}
}

// NewSelectHandler creates a gRPC handler which serves the "app" service
// "select" endpoint.
func NewSelectHandler(endpoint goa.Endpoint, h goagrpc.UnaryHandler) goagrpc.UnaryHandler {
	if h == nil {
		h = goagrpc.NewUnaryHandler(endpoint, DecodeSelectRequest, EncodeSelectResponse)
	}
	return h
}

// Select implements the "Select" method in apppb.AppServer interface.
func (s *Server) Select(ctx context.Context, message *apppb.SelectRequest) (*apppb.SelectResponse, error) {
	ctx = context.WithValue(ctx, goa.MethodKey, "select")
	ctx = context.WithValue(ctx, goa.ServiceKey, "app")
	resp, err := s.SelectH.Handle(ctx, message)
	if err != nil {
		return nil, goagrpc.EncodeError(err)
	}
	return resp.(*apppb.SelectResponse), nil
}
