// Code generated by goa v3.14.0, DO NOT EDIT.
//
// app gRPC server encoders and decoders
//
// Command:
// $ goa gen app/design

package server

import (
	app "app/gen/app"
	apppb "app/gen/grpc/app/pb"
	"context"

	goagrpc "goa.design/goa/v3/grpc"
	"google.golang.org/grpc/metadata"
)

// EncodeSelectResponse encodes responses from the "app" service "select"
// endpoint.
func EncodeSelectResponse(ctx context.Context, v any, hdr, trlr *metadata.MD) (any, error) {
	result, ok := v.(string)
	if !ok {
		return nil, goagrpc.ErrInvalidType("app", "select", "string", v)
	}
	resp := NewProtoSelectResponse(result)
	return resp, nil
}

// DecodeSelectRequest decodes requests sent to "app" service "select" endpoint.
func DecodeSelectRequest(ctx context.Context, v any, md metadata.MD) (any, error) {
	var (
		message *apppb.SelectRequest
		ok      bool
	)
	{
		if message, ok = v.(*apppb.SelectRequest); !ok {
			return nil, goagrpc.ErrInvalidType("app", "select", "*apppb.SelectRequest", v)
		}
	}
	var payload *app.SelectPayload
	{
		payload = NewSelectPayload(message)
	}
	return payload, nil
}
