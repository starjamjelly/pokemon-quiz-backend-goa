// Code generated by goa v3.14.0, DO NOT EDIT.
//
// app endpoints
//
// Command:
// $ goa gen app/design

package app

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "app" service endpoints.
type Endpoints struct {
	Select goa.Endpoint
}

// NewEndpoints wraps the methods of the "app" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Select: NewSelectEndpoint(s),
	}
}

// Use applies the given middleware to all the "app" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Select = m(e.Select)
}

// NewSelectEndpoint returns an endpoint function that calls the method
// "select" of service "app".
func NewSelectEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req any) (any, error) {
		p := req.(*SelectPayload)
		return s.Select(ctx, p)
	}
}
